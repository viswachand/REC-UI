[{"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\index.js":"1","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\serviceWorker.js":"2","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\App\\App.js":"3","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Tabs.js":"4","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Header.js":"5","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\pages\\Employees\\Employees.js":"6","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\useTable.js":"7","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\pages\\Employees\\EmployeeForm.js":"8","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Popup.js":"9","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\services\\employeeService.js":"10","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Controls.js":"11","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\useForm.js":"12","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Input.js":"13","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\DatePicker.js":"14","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\RadioGroup.js":"15","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Select.js":"16","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Checkbox.js":"17","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\ActionButton.js":"18","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Button.js":"19"},{"size":479,"mtime":1609948642238,"results":"20","hashOfConfig":"21"},{"size":5227,"mtime":1609948642242,"results":"22","hashOfConfig":"21"},{"size":1096,"mtime":1609955956136,"results":"23","hashOfConfig":"21"},{"size":2541,"mtime":1610077232192,"results":"24","hashOfConfig":"21"},{"size":3775,"mtime":1610195587403,"results":"25","hashOfConfig":"21"},{"size":4791,"mtime":1610076565552,"results":"26","hashOfConfig":"21"},{"size":3885,"mtime":1609948642236,"results":"27","hashOfConfig":"21"},{"size":4940,"mtime":1610004170641,"results":"28","hashOfConfig":"21"},{"size":1380,"mtime":1609948642230,"results":"29","hashOfConfig":"21"},{"size":1461,"mtime":1609964781641,"results":"30","hashOfConfig":"21"},{"size":410,"mtime":1609948642234,"results":"31","hashOfConfig":"21"},{"size":1216,"mtime":1610115920011,"results":"32","hashOfConfig":"21"},{"size":476,"mtime":1609948642235,"results":"33","hashOfConfig":"21"},{"size":814,"mtime":1609948642234,"results":"34","hashOfConfig":"21"},{"size":802,"mtime":1609948642236,"results":"35","hashOfConfig":"21"},{"size":920,"mtime":1609948642236,"results":"36","hashOfConfig":"21"},{"size":753,"mtime":1609948642233,"results":"37","hashOfConfig":"21"},{"size":875,"mtime":1609948642232,"results":"38","hashOfConfig":"21"},{"size":739,"mtime":1609948642232,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wmubo0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\index.js",[],["82","83"],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\serviceWorker.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\App\\App.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Tabs.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Header.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\pages\\Employees\\Employees.js",["84","85","86"],"import React, { useState } from \"react\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Toolbar,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Popup from \"../../components/Popup\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: theme.spacing(5),\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  searchInput: {\r\n    // display: \"flex\",\r\n    // flex: \"1\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"25%\",\r\n\r\n    // edge : \"start\",\r\n  },\r\n  newButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: \"fullName\", label: \"First Name\" },\r\n  { id: \"email\", label: \"Email Address\" },\r\n  { id: \"mobile\", label: \"Mobile Number\" },\r\n  { id: \"department\", label: \"Role\" },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true },\r\n];\r\n\r\nexport default function Employees() {\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [records, setRecords] = useState(employeeService.getAllEmployees());\r\n  const [filterFn, setFilterFn] = useState({\r\n    fn: (items) => {\r\n      return items;\r\n    },\r\n  });\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n\r\n  const {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting,\r\n  } = useTable(records, headCells, filterFn);\r\n\r\n  const handleSearch = (e) => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n      fn: (items) => {\r\n        if (target.value === \"\") return items;\r\n        else\r\n          return items.filter((x) =>\r\n            x.fullName.toLowerCase().includes(target.value)\r\n          );\r\n      },\r\n    });\r\n  };\r\n\r\n  const addOrEdit = (employee, resetForm) => {\r\n    if (employee.id === 0) employeeService.insertEmployee(employee);\r\n    else employeeService.updateEmployee(employee);\r\n    resetForm();\r\n    setRecordForEdit(null);\r\n    setOpenPopup(false);\r\n    setRecords(employeeService.getAllEmployees());\r\n  };\r\n\r\n  const openInPopup = (item) => {\r\n    setRecordForEdit(item);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        <Toolbar className={classes.root}>\r\n          <Typography variant=\"h6\">Registered User</Typography>\r\n          {/* <Controls.Input \r\n            // label=\"Search Employees\"\r\n            className={classes.searchInput}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment>\r\n                  <Search />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handleSearch}\r\n          /> */}\r\n          <Controls.Button\r\n            text=\"ADD USER\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            className={classes.newButton}\r\n            onClick={() => {\r\n              setOpenPopup(true);\r\n              setRecordForEdit(null);\r\n            }}\r\n          />\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {recordsAfterPagingAndSorting().map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.fullName}</TableCell>\r\n                <TableCell>{item.email}</TableCell>\r\n                <TableCell>{item.mobile}</TableCell>\r\n                <TableCell>{item.department}</TableCell>\r\n                <TableCell>\r\n                  <Controls.ActionButton\r\n                    // color=\"secondary\"\r\n                    onClick={() => {\r\n                      openInPopup(item);\r\n                    }}\r\n                  >\r\n                    <EditOutlinedIcon fontSize=\"small\" />\r\n                  </Controls.ActionButton>\r\n                  {/* <Controls.ActionButton\r\n                                            color=\"secondary\">\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton> */}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TblContainer>\r\n        <TblPagination />\r\n      </Paper>\r\n      <Popup\r\n        title=\"user Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <EmployeeForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} />\r\n      </Popup>\r\n    </>\r\n  );\r\n}\r\n","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\useTable.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\pages\\Employees\\EmployeeForm.js",["87","88"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport { useForm, Form } from '../../components/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={employeeService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Permanent Employee\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\Popup.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\services\\employeeService.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Controls.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\useForm.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Input.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\DatePicker.js",[],["89","90"],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\RadioGroup.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Select.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Checkbox.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\ActionButton.js",[],"F:\\ReactProjects\\Recurtment Management-UI\\rec\\src\\components\\controls\\Button.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":3,"nodeType":"97","messageId":"98","endLine":10,"endColumn":17},{"ruleId":"95","severity":1,"message":"99","line":15,"column":10,"nodeType":"97","messageId":"98","endLine":15,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":69,"column":9,"nodeType":"97","messageId":"98","endLine":69,"endColumn":21},{"ruleId":"95","severity":1,"message":"101","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":68,"column":8,"nodeType":"104","endLine":68,"endColumn":23,"suggestions":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'InputAdornment' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'handleSearch' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["110"],["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"113","text":"114"},[1993,2008],"[recordForEdit, setValues]"]